/*buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
   // classpath 'net.researchgate:gradle-release:2.7.0'
   // classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
  }
}*/


plugins {
  id 'idea'
  id 'java'
  id 'scala'
  id 'com.github.johnrengelman.shadow' version '1.2.4'
}

repositories {
  mavenLocal()
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.7

group = 'fr.edf.dco.edma'

ext {
  javaslangVersion = '2.0.5'
  scalaMajorVersion = '2.11'
  scalaMinorVersion = '11'
  scalaVersion = "${scalaMajorVersion}.${scalaMinorVersion}"
  hbaseVersion = "1.1.2"
  sparkVersion = "2.0.0"
}


sourceSets.main.java.srcDirs "src/main/java"
sourceSets.main.scala.srcDir "src/main/scala"

dependencies {

  // ------------------------------------------------------------
  // Hbase
  compile("org.apache.hbase:hbase-client:${hbaseVersion}") {
    exclude(module: 'slf4j-log4j12')
   // exclude(module: 'javax.servlet')
  //  exclude(module: 'org.mortbay.jetty')
  }
  compile("org.apache.hbase:hbase-common:${hbaseVersion}") {
    exclude(module: 'slf4j-log4j12')
  //  exclude(module: 'javax.servlet')
 //   exclude(module: 'org.mortbay.jetty')
  }
  compile("org.apache.hbase:hbase-server:${hbaseVersion}") {
    exclude(module: 'slf4j-log4j12')
   // exclude(module: 'javax.servlet')
/*    exclude(module: 'org.mortbay.jetty')
    exclude(module: 'jackson-module-scala_2.10')*/
  }

  //compile group: 'org.apache.hbase', name: 'hbase-spark', version:"${hbaseVersion}"

  // ------------------------------------------------------------
  // Spark
  compile group: 'org.apache.spark', name: 'spark-core_2.11', version:"${sparkVersion}"
  //compile group: 'org.apache.spark', name: 'spark-yarn_2.10', version:"${sparkVersion}"


  // ------------------------------------------------------------
  // Platform
  compile "org.scala-lang:scala-library:${scalaVersion}"
  compile "org.scala-lang:scala-reflect:${scalaVersion}"

  // ------------------------------------------------------------
  // Misc. libraries
  compile "io.javaslang:javaslang:${javaslangVersion}"
  compile "io.javaslang:javaslang-jackson:${javaslangVersion}"
  compile "org.typelevel:squants_${scalaMajorVersion}:1.2.0"
  compile "org.scalactic:scalactic_${scalaMajorVersion}:3.0.1"

  // ------------------------------------------------------------
  // Testing
  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:3.6.1'
  testCompile 'org.mockito:mockito-core:1.10.19'
  testCompile "org.scalatest:scalatest_${scalaMajorVersion}:3.0.1"

  // https://mvnrepository.com/artifact/fr.jetoile.hadoop/hadoop-unit-client
  //compile group: 'fr.jetoile.hadoop', name: 'hadoop-unit-hbase', version: '1.2'


  // ------------------------------------------------------------
  // Configuration
  compile group: 'com.typesafe', name: 'config', version: '1.2.1'

  // ------------------------------------------------------------
  // MongoDB
  // Attention conflit SCALA ??
  //compile group: 'org.mongodb.scala', name: 'mongo-scala-driver_2.12', version: '2.4.0'

}


/*jar {
  manifest {
    attributes(
            "Class-Path": configurations.compile.collect { it.getName() }.join(' '))
  }
}*/

artifacts {
  archives shadowJar
}

shadowJar {
  zip64 true
  dependencies {
    exclude(dependency("org.apache.spark:.*"))
    exclude(dependency("org.apache.hadoop:.*"))
  }
}



task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionType = 'all' // Wrapper.DistributionType.ALL
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
  main = 'org.scalatest.tools.Runner'
  args = ['-R', 'build/classes/test', '-o']
  classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn scalaTest
